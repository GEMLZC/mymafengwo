<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.luowowo.article.mapper.ViewCommentMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.luowowo.article.domain.ViewComment">
    <id column="id" property="id" />
    <result column="starNum" property="starNum" />
    <result column="img" property="img" />
    <result column="createTime" property="createTime" />
    <result column="sceneNum" property="sceneNum" />
    <result column="specialNum" property="specialNum" />
    <result column="serviceNum" property="serviceNum" />
    <result column="type" property="type" />
    <result column="thumbsupnum" property="thumbsupnum" />
    <result column="content" property="content" />
    <result column="goldenComment" property="goldenComment"/>
    <result column="hasImg" property="hasImg"/>

    <collection property="view" javaType="cn.wolfcode.luowowo.article.domain.View" columnPrefix="v_">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
    </collection>

    <collection property="user" javaType="cn.wolfcode.luowowo.member.domain.UserInfo" columnPrefix="user_">
      <id column="id" property="id"/>
      <result column="nickname" property="nickname"/>
      <result column="level" property="level"/>
      <result column="headImgUrl" property="headImgUrl"/>
    </collection>
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from view_comment
    where id = #{id}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into view_comment (view_id, user_id, starNum, img, createTime, sceneNum, specialNum, 
      serviceNum, type, thumbsupnum, content,goldenComment,hasImg)
    values (#{view.id}, #{user.id}, #{starNum}, #{img}, #{createTime}, #{sceneNum}, #{specialNum}, 
      #{serviceNum}, #{type}, #{thumbsupnum}, #{content},#{goldenComment},#{hasImg})
  </insert>
  <update id="updateByPrimaryKey">
    update view_comment
    set view_id = #{view.id},
      user_id = #{user.id},
      starNum = #{starNum},
      img = #{img},
      createTime = #{createTime},
      sceneNum = #{sceneNum},
      specialNum = #{specialNum},
      serviceNum = #{serviceNum},
      type = #{type},
      thumbsupnum = #{thumbsupnum},
      content = #{content},
      goldenComment=#{goldenComment},
      hasImg=#{hasImg}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    <include refid="sql_column"/>
    where vc.id = #{id}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    <include refid="sql_column"/>
  </select>

  <select id="queryForList" resultMap="BaseResultMap">
  <include refid="sql_column"/>
    <where>
      <if test="viewId>-1">
        and v.id=#{viewId}
      </if>

      <if test="conditionId==1">
        and vc.hasImg is true
      </if>
      <if test="conditionId==2">
        and vc.type=2
      </if>
      <if test="conditionId==3">
        and vc.type=1
      </if>
      <if test="conditionId==4">
        and vc.type=0
      </if>
      <if test="conditionId==5">
        and vc.goldenComment is true
      </if>

    </where>
    order by vc.thumbsupnum desc
  </select>
    <select id="selectByUserId" resultMap="BaseResultMap">
      <include refid="sql_column"/>
      WHERE USER.id =#{uid}
    </select>
    <sql id="sql_column">
    SELECT
      vc.id,
      vc.starNum,
      vc.img,
      vc.createTime,
      vc.sceneNum,
      vc.specialNum,
      vc.serviceNum,
      vc.type,
      vc.thumbsupnum,
      vc.content,
      vc.goldenComment,
      vc.hasImg,
      v.id v_id,
      v.NAME v_name,
      USER.id user_id,
      USER.nickname user_nickname,
      USER.headImgUrl user_headImgUrl,
      USER.LEVEL user_level
    FROM
      view_comment vc
      LEFT JOIN VIEW v ON vc.view_id = v.id
      LEFT JOIN userinfo USER ON vc.user_id = USER.id
  </sql>
</mapper>